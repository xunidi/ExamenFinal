{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js\";\n\nimport * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nexport default (_temp = class Users extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: {},\n      countries: ['mexico', 'canada', 'usa', 'india', 'china'],\n      countryUrl: \"https://restcountries.eu/rest/v2/name/mexico\",\n      urlClima: \"api.openweathermap.org/data/2.5/weather?\"\n    };\n\n    this.fetchData = async country => {\n      try {\n        const response = await WebServices.getCountryDetails({\n          urlCountries: country\n        }); // const nextState = produce(this.state, (draft) => {\n        // \tdraft.response = response;\n        // });\n        // this.setState(nextState);\n\n        this.setState({\n          response: response[0]\n        });\n        console.log('TCL: fetchData -> response', response);\n      } catch (e) {}\n    };\n\n    this.showData = country => {\n      console.log('TCL: showData -> country', country);\n      this.fetchData(country);\n    };\n\n    this.onButtonClick = () => {\n      const countryUrl = this.state.countryUrl;\n      console.log('TCL: showData -> country input', countryUrl);\n      this.fetchData(countryUrl);\n    };\n\n    this.onInputChange = event => {\n      console.log('TCL: showData -> country input clima');\n      const value = event.target.value;\n      this.setState({\n        urlClima: value\n      });\n      console.log('TCL: showData -> country input clima', value);\n    };\n\n    this.onClicklist = tipo => {\n      const urlClima = this.state.urlClima;\n      const tipoURL = tipo;\n      const urlCompuesta = '';\n\n      switch (tipo) {\n        case 'name':\n          urlCompuesta = 'https://restcountries.eu/rest/v2/name/';\n          break;\n\n        case 'id':\n          break;\n\n        case 'coor':\n          break;\n      }\n\n      this.setState({\n        urlClima: urlCompuesta\n      }); //console.log('TCL: showData -> country li clima click',urlClima);\n      //this.fetchData(countryUrl);\n    };\n  }\n\n  componentDidMount() {//this.fetchData('mexico');\n  }\n\n  render() {\n    const _this$state = this.state,\n          response = _this$state.response,\n          countries = _this$state.countries,\n          countryUrl = _this$state.countryUrl;\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.contenedor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Introduce URL de pa\\xEDs\"), React.createElement(Input, {\n      type: \"text\",\n      className: styles.input,\n      value: urlClima,\n      onChange: event => this.onInputChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: event => this.onClicklist('name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" by City name\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" by City id\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('coor'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" By coordenades\"))), React.createElement(\"div\", {\n      className: styles.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" Pa\\xEDs: \", response && response.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" Capital: \", response && response.capital), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" Poblaci\\xF3n: \", response && response.population), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Idioma:\", response && response.languages && response.languages.map((item, i) => {\n      return response.languages.length > 1 && i !== response.languages.length - 1 ? ' ' + item.nativeName + ', ' : ' ' + item.nativeName;\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" Regi\\xF3n: \", response && response.region), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Monedas:\", response && response.currencies && response.currencies.map((item, i) => {\n      return response.currencies.length > 1 && i !== response.currencies.length - 1 ? ' ' + item.name + ', ' : ' ' + item.name;\n    }))), React.createElement(\"img\", {\n      className: styles.image,\n      src: response && response.flag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js"],"names":["React","styles","WebServices","Input","Button","Users","PureComponent","state","response","countries","countryUrl","urlClima","fetchData","country","getCountryDetails","urlCountries","setState","console","log","e","showData","onButtonClick","onInputChange","event","value","target","onClicklist","tipo","tipoURL","urlCompuesta","componentDidMount","render","main","contenedor","label","input","info","name","capital","population","languages","map","item","i","length","nativeName","region","currencies","image","flag"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nexport default (class Users extends React.PureComponent {\n\tstate = {\n\t\tresponse: {},\n\t\tcountries: [ 'mexico', 'canada', 'usa', 'india', 'china' ],\n\t\tcountryUrl:\"https://restcountries.eu/rest/v2/name/mexico\",\n\t\turlClima: \"api.openweathermap.org/data/2.5/weather?\"\n\t};\n\n\tcomponentDidMount() {\n\t\t//this.fetchData('mexico');\n\t}\n\n\tfetchData = async (country) => {\n\t\ttry {\n\t\t\tconst response = await WebServices.getCountryDetails({\n\t\t\t\turlCountries: country\n\t\t\t});\n\t\t\t// const nextState = produce(this.state, (draft) => {\n\t\t\t// \tdraft.response = response;\n\t\t\t// });\n\t\t\t// this.setState(nextState);\n\t\t\tthis.setState({ response: response[0] });\n\n\t\t\tconsole.log('TCL: fetchData -> response', response);\n\t\t} catch (e) {}\n\t};\n\n\tshowData = (country) => {\n\t\tconsole.log('TCL: showData -> country', country);\n\t\tthis.fetchData(country);\n\t};\n\n\t\n\n\tonButtonClick = () => {\n\t\tconst {countryUrl} = this.state;\n\t\tconsole.log('TCL: showData -> country input',countryUrl);\n\t\tthis.fetchData(countryUrl);\n\t};\n\n\tonInputChange = (event) => {\n\t\tconsole.log('TCL: showData -> country input clima');\n\t\tconst value = event.target.value;\n\t\tthis.setState({urlClima:value });\n\t\tconsole.log('TCL: showData -> country input clima',value);\n\t};\n\n\tonClicklist = (tipo) => {\n\t\tconst {urlClima} = this.state;\n\t\tconst tipoURL = tipo;\n\t\tconst urlCompuesta = '';\n\t\tswitch(tipo){\n\t\t\tcase 'name':\n\t\t\t\turlCompuesta = 'https://restcountries.eu/rest/v2/name/';\n\t\t\t\tbreak;\n\t\t\tcase 'id':\n\t\t\t\tbreak;\n\t\t\tcase 'coor':\n\t\t\t\tbreak;\t\t\n\n\t\t}\n\t\tthis.setState({urlClima:urlCompuesta });\n\t\t//console.log('TCL: showData -> country li clima click',urlClima);\n\t\t//this.fetchData(countryUrl);\n\t};\n\n\trender() {\n\t\tconst { response, countries,countryUrl } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\t\t\t{/*<ul>\n\t\t\t\t\t{countries.map((country, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={i} className={styles.country} onClick={() => this.showData(country)}>\n\t\t\t\t\t\t\t\t{country}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>*/\n\t\t\t\t}\n\t\t\t\t<div className={styles.contenedor}>\n\t\t\t\t\t<label className={styles.label}>Introduce URL de país</label>\n\t\t\t\t\t<Input type=\"text\" className={styles.input} value={urlClima} onChange={(event) => this.onInputChange(event)} />\n\t\t\t\t\t{/*<Button type={'other'} className={styles.button} label={\"GO\"} onClick={() => this.onButtonClick()}>GO</Button>*/}\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('name')}> by City name</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('id')}> by City id</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('coor')}> By coordenades</li>\n\t\t\t\t\t</ul>\t\n\t\t\t\t</div>\t\n\t\t\t\t<div className={styles.info}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li> País: {response && response.name}</li>\n\t\t\t\t\t\t<li> Capital: {response && response.capital}</li>\n\t\t\t\t\t\t<li> Población: {response && response.population}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tIdioma:\n\t\t\t\t\t\t\t{response &&\n\t\t\t\t\t\t\t\tresponse.languages &&\n\t\t\t\t\t\t\t\tresponse.languages.map((item, i) => {\n\t\t\t\t\t\t\t\t\treturn response.languages.length > 1 && i !== response.languages.length - 1 ? ' ' + item.nativeName + ', ' : ' ' + item.nativeName;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li> Región: {response && response.region}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tMonedas:\n\t\t\t\t\t\t\t{response &&\n\t\t\t\t\t\t\t\tresponse.currencies &&\n\t\t\t\t\t\t\t\tresponse.currencies.map((item, i) => {\n\t\t\t\t\t\t\t\t\treturn response.currencies.length > 1 && i !== response.currencies.length - 1 ? ' ' + item.name + ', ' : ' ' + item.name;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<img className={styles.image} src = {response && response.flag}/> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}