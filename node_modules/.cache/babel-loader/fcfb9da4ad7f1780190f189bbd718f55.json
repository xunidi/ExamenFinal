{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js\";\n\nimport * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Table from '../../components/Table/Table';\nimport SimpleBarChart from '../../components/Chart/SimpleBarChart';\nexport default (_temp = class Users extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: {},\n      countries: ['mexico', 'canada', 'usa', 'india', 'china'],\n      countryUrl: \"https://restcountries.eu/rest/v2/name/mexico\",\n      urlClima: \"\",\n      selected: true,\n      datos: [],\n      datos2: []\n    };\n\n    this.init = () => {\n      const datos = this.state.datos; //console.log('datos',datos[0].main.pressure);\n\n      let array = [];\n      datos.forEach((item, i) => {\n        const element = {\n          temp: datos[i].temp,\n          humidity: datos[i].main.humidity,\n          pressure: datos[i].main.pressure\n        };\n        array = array.concat(element);\n      });\n      console.log('array', array); //this.setState({datos2:array});\n    };\n\n    this.fetchData = async urlCity => {\n      try {\n        const response = await WebServices.getWeather({\n          urlCity\n        });\n        this.setState({\n          response: response\n        });\n      } catch (e) {}\n    };\n\n    this.onInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        urlClima: value\n      });\n\n      try {\n        this.fetchData(value);\n      } catch (e) {}\n    };\n\n    this.onButtonNew = event => {\n      const _this$state = this.state,\n            datos = _this$state.datos,\n            response = _this$state.response,\n            urlClima = _this$state.urlClima;\n      datos.push(response);\n      this.setState({\n        datos: datos\n      });\n      this.fetchData(urlClima);\n      this.init();\n    };\n\n    this.onClicklist = tipo => {\n      let urlCompuesta = '';\n\n      switch (tipo) {\n        case 'name':\n          urlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?q=London&appid=d0b76fd83718eef1932b224506cfb48f';\n          break;\n\n        case 'id':\n          urlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?id=708546&appid=d0b76fd83718eef1932b224506cfb48f';\n          break;\n\n        case 'coor':\n          urlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=d0b76fd83718eef1932b224506cfb48f';\n          break;\n      }\n\n      this.setState({\n        urlClima: urlCompuesta\n      });\n      this.fetchData(urlCompuesta);\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const _this$state2 = this.state,\n          response = _this$state2.response,\n          urlClima = _this$state2.urlClima,\n          datos = _this$state2.datos;\n    const headers = ['city', 'temp', 'humidity', 'pressure'];\n    const data = datos; //const data2 = datos2;\n\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.contenedor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Introduce URL de pa\\xEDs\"), React.createElement(Input, {\n      type: \"text\",\n      className: styles.input,\n      value: urlClima,\n      onChange: event => this.onInputChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: 'other',\n      className: styles.button,\n      label: \"new\",\n      onClick: () => this.onButtonNew(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: event => this.onClicklist('name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" by City name\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" by City id\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('coor'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" By coordenades\"))), React.createElement(\"div\", {\n      className: styles.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Nombre:\", response && response.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Temperatura:\", response && response.main && response.main.temp), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Humedad:\", response && response.main && response.main.humidity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Presion:\", response && response.main && response.main.pressure))), React.createElement(\"div\", {\n      className: styles.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Table, {\n      data: data,\n      headers: headers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(SimpleBarChart, {\n      data: data,\n      x: 'zone',\n      y1: 'sold',\n      y2: 'total',\n      y1Axis: 'left',\n      y2Axis: 'right',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js"],"names":["React","styles","WebServices","Input","Button","Table","SimpleBarChart","Users","PureComponent","state","response","countries","countryUrl","urlClima","selected","datos","datos2","init","array","forEach","item","i","element","temp","humidity","main","pressure","concat","console","log","fetchData","urlCity","getWeather","setState","e","onInputChange","event","value","target","onButtonNew","push","onClicklist","tipo","urlCompuesta","componentDidMount","render","headers","data","contenedor","label","input","button","info","name"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AAEA,wBAAgB,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,aAA1B,CAAwC;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,SAAS,EAAE,CAAE,QAAF,EAAY,QAAZ,EAAsB,KAAtB,EAA6B,OAA7B,EAAsC,OAAtC,CAFJ;AAGPC,MAAAA,UAAU,EAAC,8CAHJ;AAIPC,MAAAA,QAAQ,EAAE,EAJH;AAKPC,MAAAA,QAAQ,EAAC,IALF;AAMPC,MAAAA,KAAK,EAAC,EANC;AAOPC,MAAAA,MAAM,EAAC;AAPA,KAD+C;;AAAA,SAevDC,IAfuD,GAehD,MAAM;AAAA,YACLF,KADK,GACI,KAAKN,KADT,CACLM,KADK,EAEZ;;AACA,UAAIG,KAAK,GAAG,EAAZ;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1B,cAAMC,OAAO,GAAG;AACfC,UAAAA,IAAI,EAAER,KAAK,CAACM,CAAD,CAAL,CAASE,IADA;AAEfC,UAAAA,QAAQ,EAAET,KAAK,CAACM,CAAD,CAAL,CAASI,IAAT,CAAcD,QAFT;AAGfE,UAAAA,QAAQ,EAAEX,KAAK,CAACM,CAAD,CAAL,CAASI,IAAT,CAAcC;AAHT,SAAhB;AAKAR,QAAAA,KAAK,GAAGA,KAAK,CAACS,MAAN,CAAaL,OAAb,CAAR;AACA,OAPD;AAQAM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBX,KAApB,EAZY,CAaZ;AACA,KA7BsD;;AAAA,SA+BvDY,SA/BuD,GA+B3C,MAAOC,OAAP,IAAmB;AAC9B,UAAI;AACH,cAAMrB,QAAQ,GAAG,MAAMR,WAAW,CAAC8B,UAAZ,CAAuB;AAC7CD,UAAAA;AAD6C,SAAvB,CAAvB;AAGA,aAAKE,QAAL,CAAc;AAAEvB,UAAAA,QAAQ,EAAEA;AAAZ,SAAd;AAEA,OAND,CAME,OAAOwB,CAAP,EAAU,CAAE;AACd,KAvCsD;;AAAA,SAyCvDC,aAzCuD,GAyCtCC,KAAD,IAAW;AAC1B,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,WAAKJ,QAAL,CAAc;AAACpB,QAAAA,QAAQ,EAACwB;AAAV,OAAd;;AACA,UAAI;AACH,aAAKP,SAAL,CAAeO,KAAf;AACA,OAFD,CAEE,OAAOH,CAAP,EAAU,CACX;AACD,KAhDsD;;AAAA,SAkDvDK,WAlDuD,GAkDxCH,KAAD,IAAW;AAAA,0BACU,KAAK3B,KADf;AAAA,YACjBM,KADiB,eACjBA,KADiB;AAAA,YACXL,QADW,eACXA,QADW;AAAA,YACFG,QADE,eACFA,QADE;AAExBE,MAAAA,KAAK,CAACyB,IAAN,CAAW9B,QAAX;AACA,WAAKuB,QAAL,CAAc;AAAClB,QAAAA,KAAK,EAACA;AAAP,OAAd;AACA,WAAKe,SAAL,CAAejB,QAAf;AACA,WAAKI,IAAL;AACA,KAxDsD;;AAAA,SA0DvDwB,WA1DuD,GA0DxCC,IAAD,IAAU;AACvB,UAAIC,YAAY,GAAG,EAAnB;;AACA,cAAOD,IAAP;AACC,aAAK,MAAL;AACCC,UAAAA,YAAY,GAAG,gGAAf;AACA;;AACD,aAAK,IAAL;AACCA,UAAAA,YAAY,GAAI,iGAAhB;AACA;;AACD,aAAK,MAAL;AACCA,UAAAA,YAAY,GAAG,sGAAf;AACA;AATF;;AAYA,WAAKV,QAAL,CAAc;AAACpB,QAAAA,QAAQ,EAAC8B;AAAV,OAAd;AACA,WAAKb,SAAL,CAAea,YAAf;AACA,KA1EsD;AAAA;;AAWvDC,EAAAA,iBAAiB,GAAG,CAEnB;;AA+DDC,EAAAA,MAAM,GAAG;AAAA,yBAE6B,KAAKpC,KAFlC;AAAA,UAEAC,QAFA,gBAEAA,QAFA;AAAA,UAEUG,QAFV,gBAEUA,QAFV;AAAA,UAEmBE,KAFnB,gBAEmBA,KAFnB;AAGR,UAAM+B,OAAO,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,UAAf,EAA0B,UAA1B,CAAhB;AACA,UAAMC,IAAI,GAAGhC,KAAb,CAJQ,CAKR;;AACA,WACC;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACwB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAK,MAAA,SAAS,EAAExB,MAAM,CAAC+C,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAE/C,MAAM,CAACgD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAEhD,MAAM,CAACiD,KAArC;AAA4C,MAAA,KAAK,EAAErC,QAAnD;AAA6D,MAAA,QAAQ,EAAGuB,KAAD,IAAW,KAAKD,aAAL,CAAmBC,KAAnB,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,OAAd;AAAuB,MAAA,SAAS,EAAEnC,MAAM,CAACkD,MAAzC;AAAiD,MAAA,KAAK,EAAE,KAAxD;AAA+D,MAAA,OAAO,EAAE,MAAM,KAAKZ,WAAL,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,OAAO,EAAGH,KAAD,IAAW,KAAKK,WAAL,CAAiB,MAAjB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC;AAAI,MAAA,OAAO,EAAGL,KAAD,IAAW,KAAKK,WAAL,CAAiB,IAAjB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFD,EAGC;AAAI,MAAA,OAAO,EAAGL,KAAD,IAAW,KAAKK,WAAL,CAAiB,MAAjB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHD,CAJD,CAFD,EAaC;AAAK,MAAA,SAAS,EAAExC,MAAM,CAACmD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY1C,QAAQ,IAAIA,QAAQ,CAAC2C,IAAjC,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB3C,QAAQ,IAAIA,QAAQ,CAACe,IAArB,IAA6Bf,QAAQ,CAACe,IAAT,CAAcF,IAA5D,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAab,QAAQ,IAAIA,QAAQ,CAACe,IAArB,IAA6Bf,QAAQ,CAACe,IAAT,CAAcD,QAAxD,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAad,QAAQ,IAAIA,QAAQ,CAACe,IAArB,IAA6Bf,QAAQ,CAACe,IAAT,CAAcC,QAAxD,CAJD,CADD,CAbD,EAqBC;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAACmD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEL,IAAb;AAAmB,MAAA,OAAO,EAAED,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEC,IAAtB;AAA4B,MAAA,CAAC,EAAE,MAA/B;AAAuC,MAAA,EAAE,EAAE,MAA3C;AAAmD,MAAA,EAAE,EAAE,OAAvD;AAAgE,MAAA,MAAM,EAAE,MAAxE;AAAgF,MAAA,MAAM,EAAE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CArBD,CADD;AA4BA;;AA9GsD,CAAxD","sourcesContent":["import * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Table from '../../components/Table/Table';\nimport SimpleBarChart from '../../components/Chart/SimpleBarChart';\n\nexport default (class Users extends React.PureComponent {\n\tstate = {\n\t\tresponse: {},\n\t\tcountries: [ 'mexico', 'canada', 'usa', 'india', 'china' ],\n\t\tcountryUrl:\"https://restcountries.eu/rest/v2/name/mexico\",\n\t\turlClima: \"\",\n\t\tselected:true,\n\t\tdatos:[],\n\t\tdatos2:[]\n\t};\n\n\tcomponentDidMount() {\n\t\t\n\t}\n\n\tinit = () => {\n\t\tconst {datos} = this.state;\n\t\t//console.log('datos',datos[0].main.pressure);\n\t\tlet array = [];\n\t\tdatos.forEach((item, i) => {\n\t\t\tconst element = {\n\t\t\t\ttemp: datos[i].temp,\n\t\t\t\thumidity: datos[i].main.humidity,\n\t\t\t\tpressure: datos[i].main.pressure\n\t\t\t};\n\t\t\tarray = array.concat(element);\n\t\t});\n\t\tconsole.log('array',array);\n\t\t//this.setState({datos2:array});\n\t};\n\n\tfetchData = async (urlCity) => {\n\t\ttry {\n\t\t\tconst response = await WebServices.getWeather({\n\t\t\t\turlCity\n\t\t\t});\n\t\t\tthis.setState({ response: response});\n\t\t\t\n\t\t} catch (e) {}\n\t};\n\n\tonInputChange = (event) => {\n\t\tconst value = event.target.value;\n\t\tthis.setState({urlClima:value});\n\t\ttry {\n\t\t\tthis.fetchData(value);\n\t\t} catch (e) {\n\t\t}\n\t};\n\n\tonButtonNew = (event) => {\n\t\tconst {datos,response,urlClima} = this.state;\n\t\tdatos.push(response);\n\t\tthis.setState({datos:datos});\n\t\tthis.fetchData(urlClima);\n\t\tthis.init();\n\t};\n\n\tonClicklist = (tipo) => {\n\t\tlet urlCompuesta = '';\n\t\tswitch(tipo){\n\t\t\tcase 'name':\n\t\t\t\turlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?q=London&appid=d0b76fd83718eef1932b224506cfb48f';\n\t\t\t\tbreak;\n\t\t\tcase 'id':\n\t\t\t\turlCompuesta =  'http://api.openweathermap.org/data/2.5/weather?id=708546&appid=d0b76fd83718eef1932b224506cfb48f';\n\t\t\t\tbreak;\n\t\t\tcase 'coor':\n\t\t\t\turlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=d0b76fd83718eef1932b224506cfb48f';\n\t\t\t\tbreak;\t\t\n\n\t\t}\n\t\tthis.setState({urlClima:urlCompuesta });\n\t\tthis.fetchData(urlCompuesta);\n\t};\n\n\trender() {\n\t\t\n\t\tconst { response, urlClima,datos } = this.state;\n\t\tconst headers = ['city','temp','humidity','pressure'];\n\t\tconst data = datos;\n\t\t//const data2 = datos2;\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\n\t\t\t\t<div className={styles.contenedor}>\n\t\t\t\t\t<label className={styles.label}>Introduce URL de país</label>\n\t\t\t\t\t<Input type=\"text\" className={styles.input} value={urlClima} onChange={(event) => this.onInputChange(event)} />\n\t\t\t\t\t<Button type={'other'} className={styles.button} label={\"new\"} onClick={() => this.onButtonNew()}/>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('name')}> by City name</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('id')}> by City id</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('coor')}> By coordenades</li>\n\t\t\t\t\t</ul>\t\n\t\t\t\t</div>\t\n\n\t\t\t\t<div className={styles.info}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Nombre:{response && response.name}</li>\n\t\t\t\t\t\t<li>Temperatura:{response && response.main && response.main.temp}</li>\n\t\t\t\t\t\t<li>Humedad:{response && response.main && response.main.humidity}</li>\n\t\t\t\t\t\t<li>Presion:{response && response.main && response.main.pressure}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.info}>\n\t\t\t\t\t<Table data={data} headers={headers} />\n\t\t\t\t\t<SimpleBarChart data={data} x={'zone'} y1={'sold'} y2={'total'} y1Axis={'left'} y2Axis={'right'} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}