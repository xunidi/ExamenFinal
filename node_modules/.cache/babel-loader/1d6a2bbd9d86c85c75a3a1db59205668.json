{"ast":null,"code":"import * as React from 'react';\nimport styles from './Table.module.scss';\nimport CurrencyFormat from 'react-currency-format';\nexport default (class Table extends React.PureComponent {\n  /*formatData = (data, type) => {\n  \tswitch (type) {\n  \t\tcase 'text':\n  \t\t\treturn data;\n  \t\tcase 'number':\n  \t\t\treturn data.toLocaleString(navigator.language, { minimumFractionDigits: 0 });\n  \t\tcase 'money':\n  \t\t\treturn <CurrencyFormat value={data} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} fixedDecimalScale={true} />;\n  \t\tdefault:\n  \t\t\treturn data;\n  \t}\n  };\n  \tcalculateFooter = (data, item) => {\n  \tswitch (item.footer) {\n  \t\tcase 'sum':\n  \t\t\treturn data.reduce((acc, row) => (acc += parseFloat(row[item.value])), 0);\n  \t\tdefault:\n  \t\t\treturn item.footer;\n  \t}\n  };*/\n\n  /*\n  <li>Nombre:{response && response.name}</li>\n  \t\t\t\t<li>Temperatura:{response && response.main && response.main.temp}</li>\n  \t\t\t\t<li>Humedad:{response && response.main && response.main.humidity}</li>\n  \t\t\t\t<li>Presion:{response && response.main && response.main.pressure}</li>\n  */\n  render() {\n    const _this$props = this.props,\n          headers = _this$props.headers,\n          data = _this$props.data;\n    console.log('TCL: fetchData -> response data table', data);\n    return {\n      /*\t<div className={styles.main}>\n      \t<table  border='1'>\n      \t\t<thead >\n      \t\t\t<tr className={styles.header}>\n      \t\t\t\t{headers.map((header, i) => {\n      \t\t\t\t\treturn (\n      \t\t\t\t\t\t<th key={i}>\n      \t\t\t\t\t\t\t{header}\n      \t\t\t\t\t\t</th>\n      \t\t\t\t\t);\n      \t\t\t\t})}\n      \t\t\t</tr>\n      \t\t</thead>\n      \t\t<tbody >\n      \t\t\t\t<tr>\n      \t\t\t\t\t<td>{data.name}</td>\n      \t\t\t\t\t<td>{data.main.temp}</td>\n      \t\t\t\t\t<td>{data.main.humidity}</td>\n      \t\t\t\t\t<td>{data.main.pressure}</td>\n      \t\t\t\t</tr>\n      \t\t\t\n      \t\t</tbody>\n      \t\t\n      \t</table>\n      \t\t\t</div>*/\n    };\n  }\n\n});","map":{"version":3,"sources":["/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/components/Table/Table.js"],"names":["React","styles","CurrencyFormat","Table","PureComponent","render","props","headers","data","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,gBAAgB,MAAMC,KAAN,SAAoBH,KAAK,CAACI,aAA1B,CAAwC;AACvD;;;;;;;;;;;;;;;;;;;;;AAqBD;;;;;;AAMCC,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSC,IADT,eACSA,IADT;AAERC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,IAArD;AACA,WACA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;AAAD,KADA;AA2BA;;AA1DsD,CAAxD","sourcesContent":["import * as React from 'react';\nimport styles from './Table.module.scss';\nimport CurrencyFormat from 'react-currency-format';\n\nexport default (class Table extends React.PureComponent {\n\t/*formatData = (data, type) => {\n\t\tswitch (type) {\n\t\t\tcase 'text':\n\t\t\t\treturn data;\n\t\t\tcase 'number':\n\t\t\t\treturn data.toLocaleString(navigator.language, { minimumFractionDigits: 0 });\n\t\t\tcase 'money':\n\t\t\t\treturn <CurrencyFormat value={data} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} fixedDecimalScale={true} />;\n\t\t\tdefault:\n\t\t\t\treturn data;\n\t\t}\n\t};\n\n\tcalculateFooter = (data, item) => {\n\t\tswitch (item.footer) {\n\t\t\tcase 'sum':\n\t\t\t\treturn data.reduce((acc, row) => (acc += parseFloat(row[item.value])), 0);\n\t\t\tdefault:\n\t\t\t\treturn item.footer;\n\t\t}\n\t};*/\n/*\n<li>Nombre:{response && response.name}</li>\n\t\t\t\t<li>Temperatura:{response && response.main && response.main.temp}</li>\n\t\t\t\t<li>Humedad:{response && response.main && response.main.humidity}</li>\n\t\t\t\t<li>Presion:{response && response.main && response.main.pressure}</li>\n*/\n\trender() {\n\t\tconst { headers, data } = this.props;\n\t\tconsole.log('TCL: fetchData -> response data table', data);\n\t\treturn (\n\t\t{/*\t<div className={styles.main}>\n\t\t\t\t<table  border='1'>\n\t\t\t\t\t<thead >\n\t\t\t\t\t\t<tr className={styles.header}>\n\t\t\t\t\t\t\t{headers.map((header, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<th key={i}>\n\t\t\t\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody >\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{data.name}</td>\n\t\t\t\t\t\t\t\t<td>{data.main.temp}</td>\n\t\t\t\t\t\t\t\t<td>{data.main.humidity}</td>\n\t\t\t\t\t\t\t\t<td>{data.main.pressure}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\n\t\t\t\t\t</tbody>\n\t\t\t\t\t\n\t\t\t\t</table>\n\t\t\t\t\t\t</div>*/}\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}