{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js\";\n\nimport * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nexport default (_temp = class Users extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: {},\n      countries: ['mexico', 'canada', 'usa', 'india', 'china'],\n      countryUrl: \"https://restcountries.eu/rest/v2/name/mexico\",\n      urlClima: \"\"\n    };\n\n    this.fetchData = async (urlCity, tipo) => {\n      try {\n        switch (tipo) {\n          case 'name':\n            const response = await WebServices.getWeather({\n              urlCity\n            });\n            this.setState({\n              response: response[0]\n            });\n            break;\n\n          case 'id':\n            const response2 = await WebServices.getWeather({\n              urlCity\n            });\n            this.setState({\n              response: response2[0]\n            });\n            break;\n\n          case 'coor':\n            const response3 = await WebServices.getWeather({\n              urlCity\n            });\n            this.setState({\n              response: response3[0]\n            });\n            break;\n        }\n\n        console.log('TCL: fetchData -> response', response);\n      } catch (e) {}\n    };\n\n    this.showData = country => {\n      console.log('TCL: showData -> country', country);\n      this.fetchData(country);\n    };\n\n    this.onButtonClick = () => {\n      const countryUrl = this.state.countryUrl;\n      console.log('TCL: showData -> country input', countryUrl);\n      this.fetchData(countryUrl);\n    };\n\n    this.onInputChange = event => {\n      console.log('TCL: showData -> country input clima');\n      const value = event.target.value;\n      this.setState({\n        urlClima: value\n      });\n      console.log('TCL: showData -> country input clima', value);\n    };\n\n    this.onClicklist = tipo => {\n      //const {urlClima} = this.state;\n      const tipoURL = tipo;\n      const urlWeatherApi = 'http://api.openweathermap.org/data/2.5/weather?id=708546&appid=d0b76fd83718eef1932b224506cfb48f';\n      let urlCompuesta = '';\n\n      switch (tipo) {\n        case 'name':\n          urlCompuesta = 'https://restcountries.eu/rest/v2/name/';\n          break;\n\n        case 'id':\n          urlCompuesta = urlWeatherApi;\n          break;\n\n        case 'coor':\n          break;\n      }\n\n      this.setState({\n        urlClima: urlCompuesta\n      }); //console.log('TCL: showData -> country li clima click',urlClima);\n\n      this.fetchData(urlCompuesta, tipoURL);\n    };\n  }\n\n  //urlClima: \"api.openweathermap.org/data/2.5/weather?\"\n  componentDidMount() {//this.fetchData('mexico');\n  }\n\n  render() {\n    const _this$state = this.state,\n          response = _this$state.response,\n          countries = _this$state.countries,\n          countryUrl = _this$state.countryUrl,\n          urlClima = _this$state.urlClima;\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.contenedor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Introduce URL de pa\\xEDs\"), React.createElement(Input, {\n      type: \"text\",\n      className: styles.input,\n      value: urlClima,\n      onChange: event => this.onInputChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: event => this.onClicklist('name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" by City name\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" by City id\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('coor'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" By coordenades\"))), React.createElement(\"div\", {\n      className: styles.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Pa\\xEDs: \", response && response.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" Capital: \", response && response.capital), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" Poblaci\\xF3n: \", response && response.population), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Idioma:\", response && response.languages && response.languages.map((item, i) => {\n      return response.languages.length > 1 && i !== response.languages.length - 1 ? ' ' + item.nativeName + ', ' : ' ' + item.nativeName;\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" Regi\\xF3n: \", response && response.region), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Monedas:\", response && response.currencies && response.currencies.map((item, i) => {\n      return response.currencies.length > 1 && i !== response.currencies.length - 1 ? ' ' + item.name + ', ' : ' ' + item.name;\n    }))), React.createElement(\"img\", {\n      className: styles.image,\n      src: response && response.flag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js"],"names":["React","styles","WebServices","Input","Button","Users","PureComponent","state","response","countries","countryUrl","urlClima","fetchData","urlCity","tipo","getWeather","setState","response2","response3","console","log","e","showData","country","onButtonClick","onInputChange","event","value","target","onClicklist","tipoURL","urlWeatherApi","urlCompuesta","componentDidMount","render","main","contenedor","label","input","info","name","capital","population","languages","map","item","i","length","nativeName","region","currencies","image","flag"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nexport default (class Users extends React.PureComponent {\n\tstate = {\n\t\tresponse: {},\n\t\tcountries: [ 'mexico', 'canada', 'usa', 'india', 'china' ],\n\t\tcountryUrl:\"https://restcountries.eu/rest/v2/name/mexico\",\n\t\turlClima: \"\"\n\t};\n//urlClima: \"api.openweathermap.org/data/2.5/weather?\"\n\tcomponentDidMount() {\n\t\t//this.fetchData('mexico');\n\t}\n\n\tfetchData = async (urlCity, tipo) => {\n\t\ttry {\n\t\t\tswitch(tipo){\n\t\t\t\t\tcase 'name': \n\t\t\t\t\tconst response = await WebServices.getWeather({\n\t\t\t\t\t\turlCity\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({ response: response[0] });\n\t\t\t\tbreak;\n\t\t\t\tcase 'id':\n\t\t\t\t\tconst response2 = await WebServices.getWeather({\n\t\t\t\t\t\turlCity\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({ response: response2[0] });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'coor':\n\t\t\t\t\t\tconst response3 = await WebServices.getWeather({\n\t\t\t\t\t\t\turlCity\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setState({ response: response3[0] });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\n\t\t\tconsole.log('TCL: fetchData -> response', response);\n\t\t} catch (e) {}\n\t};\n\n\tshowData = (country) => {\n\t\tconsole.log('TCL: showData -> country', country);\n\t\tthis.fetchData(country);\n\t};\n\n\t\n\n\tonButtonClick = () => {\n\t\tconst {countryUrl} = this.state;\n\t\tconsole.log('TCL: showData -> country input',countryUrl);\n\t\tthis.fetchData(countryUrl);\n\t};\n\n\tonInputChange = (event) => {\n\t\tconsole.log('TCL: showData -> country input clima');\n\t\tconst value = event.target.value;\n\t\tthis.setState({urlClima:value });\n\t\tconsole.log('TCL: showData -> country input clima',value);\n\t};\n\n\tonClicklist = (tipo) => {\n\t\t//const {urlClima} = this.state;\n\t\tconst tipoURL = tipo;\n\t\tconst urlWeatherApi = 'http://api.openweathermap.org/data/2.5/weather?id=708546&appid=d0b76fd83718eef1932b224506cfb48f';\n\n\t\tlet urlCompuesta = '';\n\t\tswitch(tipo){\n\t\t\tcase 'name':\n\t\t\t\turlCompuesta = 'https://restcountries.eu/rest/v2/name/';\n\t\t\t\tbreak;\n\t\t\tcase 'id':\n\t\t\t\turlCompuesta =  urlWeatherApi;\n\t\t\t\tbreak;\n\t\t\tcase 'coor':\n\t\t\t\tbreak;\t\t\n\n\t\t}\n\t\tthis.setState({urlClima:urlCompuesta });\n\t\t//console.log('TCL: showData -> country li clima click',urlClima);\n\t\tthis.fetchData(urlCompuesta,tipoURL);\n\t};\n\n\trender() {\n\t\tconst { response, countries,countryUrl,urlClima } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\t\t\t{/*<ul>\n\t\t\t\t\t{countries.map((country, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={i} className={styles.country} onClick={() => this.showData(country)}>\n\t\t\t\t\t\t\t\t{country}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>*/\n\t\t\t\t}\n\t\t\t\t<div className={styles.contenedor}>\n\t\t\t\t\t<label className={styles.label}>Introduce URL de país</label>\n\t\t\t\t\t<Input type=\"text\" className={styles.input} value={urlClima} onChange={(event) => this.onInputChange(event)} />\n\t\t\t\t\t{/*<Button type={'other'} className={styles.button} label={\"GO\"} onClick={() => this.onButtonClick()}>GO</Button>*/}\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('name')}> by City name</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('id')}> by City id</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('coor')}> By coordenades</li>\n\t\t\t\t\t</ul>\t\n\t\t\t\t</div>\t\n\t\t\t\t<div className={styles.info}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li> País: {response && response.name}</li>\n\t\t\t\t\t\t<li> Capital: {response && response.capital}</li>\n\t\t\t\t\t\t<li> Población: {response && response.population}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tIdioma:\n\t\t\t\t\t\t\t{response &&\n\t\t\t\t\t\t\t\tresponse.languages &&\n\t\t\t\t\t\t\t\tresponse.languages.map((item, i) => {\n\t\t\t\t\t\t\t\t\treturn response.languages.length > 1 && i !== response.languages.length - 1 ? ' ' + item.nativeName + ', ' : ' ' + item.nativeName;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li> Región: {response && response.region}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tMonedas:\n\t\t\t\t\t\t\t{response &&\n\t\t\t\t\t\t\t\tresponse.currencies &&\n\t\t\t\t\t\t\t\tresponse.currencies.map((item, i) => {\n\t\t\t\t\t\t\t\t\treturn response.currencies.length > 1 && i !== response.currencies.length - 1 ? ' ' + item.name + ', ' : ' ' + item.name;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<img className={styles.image} src = {response && response.flag}/> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}