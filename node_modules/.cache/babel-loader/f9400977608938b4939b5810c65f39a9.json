{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js\";\n\nimport * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Table from '../../components/Table/Table';\nimport SimpleBarChart from '../../components/Chart/SimpleBarChart';\nexport default (_temp = class Users extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: {},\n      countries: ['mexico', 'canada', 'usa', 'india', 'china'],\n      countryUrl: \"https://restcountries.eu/rest/v2/name/mexico\",\n      urlClima: \"\",\n      selected: true,\n      datos: []\n    };\n\n    this.fetchData = async urlCity => {\n      try {\n        const response = await WebServices.getWeather({\n          urlCity\n        });\n        this.setState({\n          response: response\n        });\n        console.log('fetch data response', response);\n      } catch (e) {}\n    };\n\n    this.onInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        urlClima: value\n      });\n      console.log('input', value);\n    };\n\n    this.onButtonNew = () => {\n      //this.componentDidMount();\n      const _this$state = this.state,\n            datos = _this$state.datos,\n            urlClima = _this$state.urlClima,\n            response = _this$state.response;\n      console.log('response', response);\n      /*datos.push(response);\n      \n      this.setState({datos:datos});*/\n    };\n\n    this.onClicklist = tipo => {\n      let urlCompuesta = '';\n\n      switch (tipo) {\n        case 'name':\n          urlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?q=London&appid=d0b76fd83718eef1932b224506cfb48f';\n          break;\n\n        case 'id':\n          urlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?id=708546&appid=d0b76fd83718eef1932b224506cfb48f';\n          break;\n\n        case 'coor':\n          urlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=d0b76fd83718eef1932b224506cfb48f';\n          break;\n      }\n\n      this.setState({\n        urlClima: urlCompuesta\n      });\n      this.fetchData(urlCompuesta);\n    };\n  }\n\n  componentDidMount() {\n    /*const {urlClima} = this.state;\n    urlClima && this.fetchData(urlClima);*/\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          response = _this$state2.response,\n          urlClima = _this$state2.urlClima,\n          datos = _this$state2.datos;\n    const headers = ['city', 'temp', 'humidity', 'pressure'];\n    const data = datos;\n    console.log('TCL: showData -> country input datos', datos);\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.contenedor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: styles.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Introduce URL de pa\\xEDs\"), React.createElement(Input, {\n      type: \"text\",\n      className: styles.input,\n      value: urlClima,\n      onChange: event => this.onInputChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: 'other',\n      className: styles.button,\n      label: \"new\",\n      onClick: () => this.onButtonNew(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: event => this.onClicklist('name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" by City name\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" by City id\"), React.createElement(\"li\", {\n      onClick: event => this.onClicklist('coor'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" By coordenades\"))), React.createElement(\"div\", {\n      className: styles.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Nombre:\", response && response.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Temperatura:\", response && response.main && response.main.temp), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Humedad:\", response && response.main && response.main.humidity), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Presion:\", response && response.main && response.main.pressure))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Table, {\n      data: data,\n      headers: headers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(SimpleBarChart, {\n      data: data,\n      x: 'zone',\n      y1: 'sold',\n      y2: 'total',\n      y1Axis: 'left',\n      y2Axis: 'right',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}, _temp);","map":{"version":3,"sources":["/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/screens/Users/Users.js"],"names":["React","styles","WebServices","Input","Button","Table","SimpleBarChart","Users","PureComponent","state","response","countries","countryUrl","urlClima","selected","datos","fetchData","urlCity","getWeather","setState","console","log","e","onInputChange","event","value","target","onButtonNew","onClicklist","tipo","urlCompuesta","componentDidMount","render","headers","data","main","contenedor","label","input","button","info","name","temp","humidity","pressure"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from './Users.module.scss';\nimport WebServices from '../../WebServices/WebServices';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Table from '../../components/Table/Table';\nimport SimpleBarChart from '../../components/Chart/SimpleBarChart';\n\nexport default (class Users extends React.PureComponent {\n\tstate = {\n\t\tresponse: {},\n\t\tcountries: [ 'mexico', 'canada', 'usa', 'india', 'china' ],\n\t\tcountryUrl:\"https://restcountries.eu/rest/v2/name/mexico\",\n\t\turlClima: \"\",\n\t\tselected:true,\n\t\tdatos:[]\n\t};\n\n\tcomponentDidMount() {\n\t\t/*const {urlClima} = this.state;\n\t\turlClima && this.fetchData(urlClima);*/\n\t}\n\n\tfetchData = async (urlCity) => {\n\t\ttry {\n\t\t\tconst response = await WebServices.getWeather({\n\t\t\t\turlCity\n\t\t\t});\n\t\t\tthis.setState({ response: response });\n\t\t\t\n\t\t\tconsole.log('fetch data response', response);\n\t\t} catch (e) {}\n\t};\n\n\tonInputChange = (event) => {\n\t\tconst value = event.target.value;\n\t\tthis.setState({urlClima:value});\n\t\tconsole.log('input',value);\n\t};\n\n\tonButtonNew = () => {\n\t\t//this.componentDidMount();\n\t\tconst {datos,urlClima,response} = this.state;\n\t\tconsole.log('response',response);\n\t\t/*datos.push(response);\n\t\t\n\t\tthis.setState({datos:datos});*/\n\t\t\n\t};\n\n\tonClicklist = (tipo) => {\n\t\tlet urlCompuesta = '';\n\t\tswitch(tipo){\n\t\t\tcase 'name':\n\t\t\t\turlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?q=London&appid=d0b76fd83718eef1932b224506cfb48f';\n\t\t\t\tbreak;\n\t\t\tcase 'id':\n\t\t\t\turlCompuesta =  'http://api.openweathermap.org/data/2.5/weather?id=708546&appid=d0b76fd83718eef1932b224506cfb48f';\n\t\t\t\tbreak;\n\t\t\tcase 'coor':\n\t\t\t\turlCompuesta = 'http://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=d0b76fd83718eef1932b224506cfb48f';\n\t\t\t\tbreak;\t\t\n\n\t\t}\n\t\tthis.setState({urlClima:urlCompuesta });\n\t\tthis.fetchData(urlCompuesta);\n\t};\n\n\trender() {\n\t\t\n\t\tconst { response, urlClima,datos } = this.state;\n\t\tconst headers = ['city','temp','humidity','pressure'];\n\t\tconst data = datos;\n\t\tconsole.log('TCL: showData -> country input datos',datos);\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\n\t\t\t\t<div className={styles.contenedor}>\n\t\t\t\t\t<label className={styles.label}>Introduce URL de país</label>\n\t\t\t\t\t<Input type=\"text\" className={styles.input} value={urlClima} onChange={(event) => this.onInputChange(event)} />\n\t\t\t\t\t<Button type={'other'} className={styles.button} label={\"new\"} onClick={() => this.onButtonNew()}/>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('name')}> by City name</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('id')}> by City id</li>\n\t\t\t\t\t\t<li onClick={(event) => this.onClicklist('coor')}> By coordenades</li>\n\t\t\t\t\t</ul>\t\n\t\t\t\t</div>\t\n\n\t\t\t\t<div className={styles.info}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Nombre:{response && response.name}</li>\n\t\t\t\t\t\t<li>Temperatura:{response && response.main && response.main.temp}</li>\n\t\t\t\t\t\t<li>Humedad:{response && response.main && response.main.humidity}</li>\n\t\t\t\t\t\t<li>Presion:{response && response.main && response.main.pressure}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Table data={data} headers={headers} />\n\t\t\t\t\t<SimpleBarChart data={data} x={'zone'} y1={'sold'} y2={'total'} y1Axis={'left'} y2Axis={'right'} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}