{"ast":null,"code":"var _jsxFileName = \"/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/components/Table/Table.js\";\nimport * as React from 'react';\nimport styles from './Table.module.scss';\nimport CurrencyFormat from 'react-currency-format';\nexport default (class Table extends React.PureComponent {\n  /*formatData = (data, type) => {\n  \tswitch (type) {\n  \t\tcase 'text':\n  \t\t\treturn data;\n  \t\tcase 'number':\n  \t\t\treturn data.toLocaleString(navigator.language, { minimumFractionDigits: 0 });\n  \t\tcase 'money':\n  \t\t\treturn <CurrencyFormat value={data} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} fixedDecimalScale={true} />;\n  \t\tdefault:\n  \t\t\treturn data;\n  \t}\n  };\n  \tcalculateFooter = (data, item) => {\n  \tswitch (item.footer) {\n  \t\tcase 'sum':\n  \t\t\treturn data.reduce((acc, row) => (acc += parseFloat(row[item.value])), 0);\n  \t\tdefault:\n  \t\t\treturn item.footer;\n  \t}\n  };*/\n\n  /*\n  <li>Nombre:{response && response.name}</li>\n  \t\t\t\t<li>Temperatura:{response && response.main && response.main.temp}</li>\n  \t\t\t\t<li>Humedad:{response && response.main && response.main.humidity}</li>\n  \t\t\t\t<li>Presion:{response && response.main && response.main.pressure}</li>\n  */\n  render() {\n    const _this$props = this.props,\n          headers = _this$props.headers,\n          data = _this$props.data;\n    console.log('TCL: fetchData -> response data table', data);\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: styles.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: styles.mainHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, headers.map((header, i) => {\n      return React.createElement(\"th\", {\n        key: i,\n        className: styles.header_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, header);\n    }))), React.createElement(\"tbody\", {\n      className: styles.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: styles.row_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, data.name), React.createElement(\"td\", {\n      className: styles.row_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, data.main && data.main.temp), React.createElement(\"td\", {\n      className: styles.row_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, data.main && data.main.humidity), React.createElement(\"td\", {\n      className: styles.row_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, data.main && data.main.pressure)))));\n  }\n\n});","map":{"version":3,"sources":["/Users/Xuni/git/linkClima/reactCourse.CM2019.myFirstApp/src/components/Table/Table.js"],"names":["React","styles","CurrencyFormat","Table","PureComponent","render","props","headers","data","console","log","main","table","mainHeader","header","map","i","header_item","body","row","row_item","name","temp","humidity","pressure"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,gBAAgB,MAAMC,KAAN,SAAoBH,KAAK,CAACI,aAA1B,CAAwC;AACvD;;;;;;;;;;;;;;;;;;;;;AAqBD;;;;;;AAMCC,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSC,IADT,eACSA,IADT;AAERC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,IAArD;AACA,WACC;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACU,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAEV,MAAM,CAACW,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAEX,MAAM,CAACY,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAEZ,MAAM,CAACa,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEP,OAAO,CAACQ,GAAR,CAAY,CAACD,MAAD,EAASE,CAAT,KAAe;AAC3B,aACC;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAY,QAAA,SAAS,EAAEf,MAAM,CAACgB,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEH,MADF,CADD;AAKA,KANA,CADF,CADD,CADD,EAYC;AAAO,MAAA,SAAS,EAAEb,MAAM,CAACiB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAEjB,MAAM,CAACkB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAElB,MAAM,CAACmB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCZ,IAAI,CAACa,IAAtC,CADD,EAEC;AAAI,MAAA,SAAS,EAAEpB,MAAM,CAACmB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCZ,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACG,IAAL,CAAUW,IAAxD,CAFD,EAGC;AAAI,MAAA,SAAS,EAAErB,MAAM,CAACmB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCZ,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACG,IAAL,CAAUY,QAAxD,CAHD,EAIC;AAAI,MAAA,SAAS,EAAEtB,MAAM,CAACmB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCZ,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACG,IAAL,CAAUa,QAAxD,CAJD,CADD,CAZD,CADD,CADD;AA0BA;;AAzDsD,CAAxD","sourcesContent":["import * as React from 'react';\nimport styles from './Table.module.scss';\nimport CurrencyFormat from 'react-currency-format';\n\nexport default (class Table extends React.PureComponent {\n\t/*formatData = (data, type) => {\n\t\tswitch (type) {\n\t\t\tcase 'text':\n\t\t\t\treturn data;\n\t\t\tcase 'number':\n\t\t\t\treturn data.toLocaleString(navigator.language, { minimumFractionDigits: 0 });\n\t\t\tcase 'money':\n\t\t\t\treturn <CurrencyFormat value={data} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} fixedDecimalScale={true} />;\n\t\t\tdefault:\n\t\t\t\treturn data;\n\t\t}\n\t};\n\n\tcalculateFooter = (data, item) => {\n\t\tswitch (item.footer) {\n\t\t\tcase 'sum':\n\t\t\t\treturn data.reduce((acc, row) => (acc += parseFloat(row[item.value])), 0);\n\t\t\tdefault:\n\t\t\t\treturn item.footer;\n\t\t}\n\t};*/\n/*\n<li>Nombre:{response && response.name}</li>\n\t\t\t\t<li>Temperatura:{response && response.main && response.main.temp}</li>\n\t\t\t\t<li>Humedad:{response && response.main && response.main.humidity}</li>\n\t\t\t\t<li>Presion:{response && response.main && response.main.pressure}</li>\n*/\n\trender() {\n\t\tconst { headers, data } = this.props;\n\t\tconsole.log('TCL: fetchData -> response data table', data);\n\t\treturn (\n\t\t\t<div className={styles.main}>\n\t\t\t\t<table className={styles.table}>\n\t\t\t\t\t<thead className={styles.mainHeader}>\n\t\t\t\t\t\t<tr className={styles.header}>\n\t\t\t\t\t\t\t{headers.map((header, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<th key={i} className={styles.header_item}>\n\t\t\t\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody className={styles.body}>\n\t\t\t\t\t\t<tr className={styles.row}>\n\t\t\t\t\t\t\t<td className={styles.row_item}>{data.name}</td>\n\t\t\t\t\t\t\t<td className={styles.row_item}>{data.main && data.main.temp}</td>\n\t\t\t\t\t\t\t<td className={styles.row_item}>{data.main && data.main.humidity}</td>\n\t\t\t\t\t\t\t<td className={styles.row_item}>{data.main && data.main.pressure}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}